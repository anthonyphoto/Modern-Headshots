/* run: mongo {filename}.j */
db = db.getSiblingDB('photo');
print(db.events.count());

const strStartDate = "3/18/2019";
const numDays = 112;  // duartion days


runDataGenerator(strStartDate, numDays);




/* User Info
Admin:  anthony011@gmail.com    Anthony Kim     5c7bf1b2936fd96128c2802b
demo:   melody@demo.com         Melody Demo     5c8db0ebf5bcb93e0712f8bd
User1:  demo1@demo.com          Diane Kim       5c8daf68eae2ea303e5a8977
User2:  demo2@demo.com          Gromit Bong     5c8dafcceae2ea303e5a8978
User3:  demo3@demo.com          Demo User       5c8db020eae2ea303e5a8979


*/


function runDataGenerator(strDt, numDays) {

    const availableSlot = {
        "sessionDate": new Date("3/17/2019, 8:00:00 EDT"),
        "shootType": "",
        "eventTitle": "",
        "price": "",
        "status": "Available",
        "submitter": ObjectId("5c7bf1b2936fd96128c2802b"),
        "photoLink": [],
        "specialNote": ""
    }

    // demo1@demo.com 
    const slot1 = {
        "shootType": "Headshot",
        "eventTitle": "Diane's Headshot",
        "eventPhone": "222-333-1234",
        "status": "Booked",
        "submitter": ObjectId("5c8daf68eae2ea303e5a8977"),
        "specialNote": "Generated by script"
    }

    // demo2@demo.com 
    const slot2 = {
        "shootType": "Headshot",
        "eventTitle": "Gromit's Headshot",
        "eventPhone": "310-232-5678",
        "status": "Booked",
        "submitter": ObjectId("5c8dafcceae2ea303e5a8978"),
        "specialNote": "Generated by script"
    }

    // demo3@demo.com 
    const slot3 = {
        "shootType": "Headshot",
        "eventTitle": "Passport Photo",
        "eventPhone": "267-829-5284",
        "status": "Booked",
        "submitter": ObjectId("5c8db020eae2ea303e5a8979"),
        "specialNote": "Generated by script"
    }

    const startDate = new Date(strDt);

    const earliestTime = 9;   // 9 am
    const latestTime = 20;  // 9 pm (starting from 8pm)
    const minHours = 3;   // 0 or 3 hours
    const maxHours = 8;
    let dt = new Date();


    for (let i = 0; i < numDays; i++) {
        
        dt = new Date();
        dt.setDate(startDate.getDate() + i);
            
        const mon = dt.getMonth() + 1;
        const day = dt.getDate();
        const year = dt.getFullYear();

        const duration = Math.random() > .2?
            Math.floor(Math.random() * (maxHours - minHours - 1)) + minHours
            : 0;
        const startTime = Math.floor(Math.random() * (latestTime - earliestTime - duration)) + earliestTime;

        print("dtSlot: ", "----------------"); 
    
        for (let j = startTime; j < (startTime + duration); j++) 
        {
            const timeSlot = {
                sessionDate: new Date(`${mon}/${day}/${year}, ${j}:00:00 EDT`),
                updated: new Date()
            }

            let item;
            switch(Math.floor(Math.random() * 10)) {
                case 0:
                    item = Object.assign({}, slot1, timeSlot);
                    break;

                case 1:
                    item = Object.assign({}, slot2, timeSlot);
                    break;
            
                case 2:
                    item = Object.assign({}, slot3, timeSlot);
                    break;

                default:
                    item = Object.assign({}, availableSlot, timeSlot);


            }

            db.events.insert(item);
            
            print("Inserted Item: ", dt, JSON.stringify(timeSlot)); 

        }
    }
}

